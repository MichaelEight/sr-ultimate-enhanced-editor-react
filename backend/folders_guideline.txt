GENERATED BY CHATGPT

1. models

    Purpose: Contains Python classes or ORM models representing the application's data structure.
    Usage:
        Define data models with attributes corresponding to database columns.
        Include methods for data operations like creating, updating, and deleting records.
    Examples:
        User model with fields like id, username, email, and password methods.
        Product model with fields for id, name, price, and stock adjustment methods.

2. routes

    Purpose: Defines API endpoints for the web application. Routes handle HTTP requests and responses.
    Usage:
        Create route files that manage specific entity operations (e.g., user routes, product routes).
        Connect routes to service functions to perform business logic.
    Examples:
        user_routes.py to handle user registration, login, and profile fetching.
        product_routes.py for listing products, adding new products, and fetching product details.

3. services

    Purpose: Contains business logic and core functionality of the application.
    Usage:
        Implement service functions that perform operations involving multiple models or external APIs.
        Keep business logic separate from route handling to maintain clean code separation.
    Examples:
        user_service.py for creating users and handling user authentication.
        email_service.py to send verification or notification emails.

4. source

    Purpose: Holds the main entry points of the application and other core resources.
    Usage:
        Initialize the web application, configure middleware, and load environment settings.
        Keep application startup logic centralized.
    Examples:
        main.py as the entry point that initializes FastAPI and mounts all routes.
        config.py for loading and managing environment configurations.

5. tests

    Purpose: Contains unit and integration tests to ensure code correctness and reliability.
    Usage:
        Write tests for individual functions, models, and routes to verify expected behavior.
        Use test clients to simulate HTTP requests to the application.
    Examples:
        test_user_model.py to test user creation and password hashing.
        test_user_routes.py to test user registration and login API endpoints.

6. utils

    Purpose: Provides utility functions and helpers that can be reused across the application.
    Usage:
        Implement small, reusable functions for common tasks such as string manipulation, date formatting, or data validation.
        Keep utility functions modular and focused on a single task.
    Examples:
        string_utils.py for string validation and formatting functions.
        date_utils.py for date calculations and formatting.